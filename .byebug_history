c
@produto.situacao
c
@produto.situacao
c
@cliente_contatos
c
]c
c
@cliente_contatos
@cliente
c
@cliente_contatos
c
@cliente_contato.cliente_id
@cliente.id
n
@cliente.id
@cliente_contato.cliente_id
c
@cliente_contato.cliente_id
@cliente.id
@cliente
c
params[:id]
c
params[:id]
c
params[:id]
c
params[:id]
c
params[:id]
c
params[:id]
c
params[:id]
c
params[:id]
c
params[:id]
:id
c
n
c
s
c
@orcamento = Orcamento.find(params[:id])
c
s
c
n
s
n
param[:id]
c
n
s
params
c
params
n
c
produto_params
c
preco.tr(",",".").to_f
preco.tr(",",".")
preco=produto_params[:preco_custo]
c
n
s
produto_params
c
produto_params
c
C
c
@produto
c
@produto
c
@clientes
n
@clientes_cpnj
n
c
n
@clientes
n
@clientes
n
@clientes
n
c
@clientes_cpnj
@clientes
n
@clientes
c
n
@clientes_nome
@clientes
n
c
@clientes
@cliente
@clientes_nome
n
@clientes_nome
n
@clientes_cnpj
@clientes_nome
@clientes
c
@clientes_cnpj
@clientes_nome
@clientes
@clientes_nome
@clientes
c
@clientes
c
C
a=@clientes
@clientes == nil
c
@clientes
@clientes == nil
c
@clientes == nil
@clientes.nil
a[1]
a[0]
a=@clientes
@clientes
@clienes
@clientes_nome.nome
@clientes_nome
@clientes
c
@clientes
c
a[1].cnpj
a[1].nome
a[0].nome
a=@clientes
@clientes
c
@clientes
c
@clientes
c
clientes_url
@clientes
c
@clientes
c
@clientes
c
<<<<<<< HEAD
=======
c
movimento_estoques
c
nota_fiscal_itens.nota_fiscal_item_lotes
nota_fiscal_itens
exit
nota_fiscal_transporta
self
exit
e = movimento.estoque
movimento.estoque
movimento
exit
n
produto
c
self.nota_fiscal_item_lotes
nota_fiscal_item_lotes
estoque
quantidade
produto.estoque_atual
self
produto
mv.produto.estoque_atual
mv.produto
mv =nota_fiscal.movimento_estoques[0]
nota_fiscal.movimento_estoques[0]
nota_fiscal.movimento_estoques
exit
nota_fiscal.movimento_estoques
nota_fiscal.movimento_estoque
nota_fiscal.movimento
self
exit
produto.estoques.sum(:estoque_atual_lote)
exit
c
n
exit
Produto.find_by(codprd_sac: linha[codprd_sac].to_i)
c
Produto.find_by(codprd_sac: linha[codprd_sac].to_i)
Produto.find_by(codprd_sac: linha[codprd_sac])
linha
estoque.save!
estoque.save
exit
dia.zero?
data
exit
Date.new(ano, mes, dia)
n
exit
n
data
exit
produto.localizacao_estoque.local
produto.localizacao_estoque
produto
item_lote.produto
item_lote.estoque.data_validade
item_lote.estoque
item_lote
item_lote.estoque.lote
item_lote.estoque
item_lote
exit
c
nota_fiscal_item_lotes.firstc
nota_fiscal_item_lotes.first.estoque
nota_fiscal_item_lotes.first
nota_fiscal_item_lotes
self
c
error
n
c
Cfop.find_by(informativo: 'cfop_st_de').codigo
Cfop.find_by(informativo: 'cfop_st_de')
cfop
nota_fiscal.cfop.informativo
nota_fiscal.cfop
nota_fiscal
c
produto.estoque_atual 
params[:qtd_baixa].to_f
params[:estoque_atual_lote]
params[:estoque_atual_lote].to_f
n
self.produto
c
faturamento_parcela[:valor_parcela].gsub('.', '').gsub(',', '.').to_f
faturamento_parcela[:valor_parcela]
faturamento_parcela[:valor_parcela].gsub('R$', '')
faturamento_parcela[:valor_parcela].gsub('R$', '').to_f
