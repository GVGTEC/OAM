<style>
.table-nota {display: none;}
.form-control {text-align: center;}
.form-produtos-itens{margin: 0px; height: 36px; width: 350px; text-align: inherit;}
</style>

<%= form_for([@nota_fiscal, @nota_fiscal_item], html: { class: "form-horizontal", role: "form" }) do |f| %>
  <div class="form-group">
    <div class="col-sm-12">
      <label class="control-label">
        Nº Nota Fiscal: 
        <span style="font-size:2rem"><%= @nota_fiscal.numero_nota %></span>
      </label>
    </div>
  </div>

  <br>

  <div id="loader"></div>

  <div class="table-nota">
    <div class="table-responsive animate-bottom">
      <table class="table table-hover table-striped table-bordered user-select-none dinamicTable jsDinamicTable_nota_fiscal_id_<%= @nota_fiscal.id %>">
        <thead>
          <tr>
            <th></th>
            <th>Código</th>
            <th>Descrição</th>
            <th>CFOP</th>
            <th>NCM</th>
            <th>Un</th>
            <th>Qtd</th>
            <th>Preço Unitário</th>
            <th>Preço Total</th>
            <th></th>
          </tr>
        </thead>

        <tbody id="tableBody_nota_fiscal_id_<%= @nota_fiscal.id %>">
          <% @nota_fiscal.nota_fiscal_itens.each_with_index do |nota_fiscal_item, index| %>
            <tr id="<%= index+1 %>" class="operacao">
              <td><%= index+1 %></td>
              <td><input class="form-control" id="<%= index+1 %>-cod_produto" data-behavior="cod_produto" type='text' value="<%= nota_fiscal_item.produto.id %>" style='width: 55px;' name='nota_fiscal[nota_fiscal_item][][cod_produto]'></td>
              <td>
                <%= f.select :descricao,
                  Produto.all.reorder("descricao asc").collect { |produto| [produto.descricao, produto.id] },
                  {:selected => nota_fiscal_item.produto.id },
                  {:class=> 'form-control form-produtos-itens', name: 'nota_fiscal[nota_fiscal_item][][descricao]', onblur: "atualizaProduto()", id: "#{index+1}-descricao"} 
                %> 
              </td>
              <td><input class='form-control' id='<%= index+1 %>-cfop'           type='text' value='<%= nota_fiscal_item.cfop %>'                               name='nota_fiscal[nota_fiscal_item][][cfop]'           style='width: 65px;' data-behavior='cfop'       ></td>
              <td><input class='form-control' id='<%= index+1 %>-ncm'            type='text' value='<%= nota_fiscal_item.ncm %>'                                name='nota_fiscal[nota_fiscal_item][][ncm]'    readonly                                                        ></td>
              <td><input class='form-control' id='<%= index+1 %>-un'             type='text' value='<%= nota_fiscal_item.unidade %>'                            name='nota_fiscal[nota_fiscal_item][][un]'    readonly         style='width: 50px;'                            ></td>
              <td><input class='form-control' id='<%= index+1 %>-qtd'            type='number' value='<%= formatar_qtd(nota_fiscal_item.quantidade) %>'           name='nota_fiscal[nota_fiscal_item][][qtd]'            style='width: 70px;' data-behavior='qtd'        ></td>
              <td><input class='form-control' id='<%= index+1 %>-preco_unitario' type='text' value='R$ <%= nota_fiscal_item.preco_unitario %>0' name='nota_fiscal[nota_fiscal_item][][preco_unitario]' readonly style='width: 95px;' data-behavior='preco_unitario'></td>
              <td><input class='form-control' id='<%= index+1 %>-preco_total'    type='text' value='R$ <%= nota_fiscal_item.preco_total %>0'    name='nota_fiscal[nota_fiscal_item][][preco_total]'   readonly style="width: 110px;" data-behavior='preco_total'></td>
              <td><button type='button' id='<%= index+1 %>-delete' data-behavior='delete' class='btn btn-danger delete'>x</button></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>

    <br>

    <div class="form-group">
      <div class="col-sm-6"></div>
      <div class="col-sm-6" style="text-align:end">
      <p><b>Valor Total:<b></p>
      <p class="valor-total" style="font-size: 30px"></p>
      </div>
    </div>

    <div class="form-group">
      <div class="col-sm-10">
        <%= f.submit "Salvar", class: "btn btn-primary" %>
      </div>
    </div>
  </div>
<% end %>


<div id="myModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <div class="table-responsive">
      <h3>Produto: <span class="descricaoProd"></span></h3>
      <h4>Quantidade: <span class="qtdProd"></span></h4>
      <hr>
      <table class="table table-hover table-striped table-bordered user-select-none dinamicTable jsDinamicTable_estoque">
        <thead>
          <tr>
            <th>Lote</th>
            <th>Validade</th>
            <th>Estoque</th>
            <th>Baixar</th>
            <th>Total</th>
          </tr>
        </thead>

        <tbody id="tableBody_estoque">
        </tbody>
      </table>

      <br>

      <a href="javascript:;" class="btn btn-primary" onclick="salvarMovimentoEstoque()">Salvar</a>
    </div>
  </div>
</div>

<script>
  $('body').on('click', '.delete', function() {
    const $tr = $(this).closest('tr');
    const number_tr = this.id.match(/\d+/)[0]
    const produto_id = $(`#${number_tr}-cod_produto`).val()
    const movimentoEstoques = getMovimentoEstoque()

    let indices_removidos = []
    if(movimentoEstoques){
      for (let index = 0; index < movimentoEstoques.length; index++) {
        const movimento = movimentoEstoques[index];
        if(movimento.produto_id == produto_id){
          indices_removidos.push(index)
        }
      }

      indices_removidos.reverse().map(function(index) {
        movimentoEstoques.splice(index, 1)
      });
      
      setMovimentoEstoque(movimentoEstoques)
    }
      
    $tr.remove();

    calculoValorTotal()
  });

  // =============== Adicionar e Calcular Produtos ===============
  $(document).ready(function() {
    $(window).keydown(function(event){
      if(event.keyCode == 13) {
        event.preventDefault();
        return false;
      }
    });

    addProduto()
    getMovimentos()
  });

  $(document).on('click keyup', '[data-behavior~=cod_produto]', function(event) {
    const number_tr = parseInt(event.target.id.match(/\d+/)[0])
    const val = parseInt($(`#${number_tr}-cod_produto`).val())
    $(`#${number_tr}-descricao`).val(`${val}`)
  });

  $(document).on('click keyup', '[data-behavior~=qtd]', function(event) {
    const number_tr = parseInt(event.target.id.match(/\d+/)[0])
    const preco_unitario = parseFloat($(`#${number_tr}-preco_unitario`).val().match(/\d+/)[0])
    const qtd = parseFloat($(`#${number_tr}-qtd`).val())
    const total = qtd * preco_unitario

    if(total){
      $(`#${number_tr}-preco_total`).val(`R$ ${total.toFixed(2)}`)
    }

    calculoValorTotal()
  });

  $(document).on('keyup', '[data-behavior~=delete]', function(event) {
    const number_tr = parseInt(event.target.id.match(/\d+/)[0])
    const nextId = number_tr + 1
    const cod_produto_next = $(`#${nextId}-cod_produto`).val()

    if(!cod_produto_next && cod_produto_next == null && cod_produto_next != ""){
      if(event.keyCode == 9) {
        addProduto()
      }
    }
  });

  const addProduto = () => {
    var clica = setInterval(function(){
      clearInterval(clica);
      var table = $('.jsDinamicTable_nota_fiscal_id_<%= @nota_fiscal.id %>');
      var body = $('#tableBody_nota_fiscal_id_<%= @nota_fiscal.id %>');
      var nextId = body.find('tr').length + 1;
      table.append(
        $(
        "<tr id='"+ nextId +"' class='operacao' >"+ 
          "<td>"+ nextId +"</td>"+
          "<td><input  class='form-control' id='"+nextId+"-cod_produto'    type='text' name='nota_fiscal[nota_fiscal_item][][cod_produto]'    style='width: 55px;'                                         data-behavior='cod_produto'                              ></td>" +
          "<td><select class='form-control form-produtos-itens' id='"+nextId+"-descricao'                  name='nota_fiscal_item[descricao]'                     style='margin: 0px; height: 36px; width: 350px;' onblur='atualizaProduto()'  id='nota_fiscal_item_descricao'></select></td>" +
          "<td><input  class='form-control' id='"+nextId+"-cfop'           type='text' name='nota_fiscal[nota_fiscal_item][][cfop]'           style='width: 65px;' value='<%= @nota_fiscal.cfop.codigo %>' data-behavior='cfop'                                     ></td>" +
          "<td><input  class='form-control' id='"+nextId+"-ncm'            type='text' name='nota_fiscal[nota_fiscal_item][][ncm]'                                    readonly                                                                                              ></td>" +
          "<td><input  class='form-control' id='"+nextId+"-un'             type='text' name='nota_fiscal[nota_fiscal_item][][un]'             style='width: 50px;'    readonly                                                                                            ></td>" +
          "<td><input  class='form-control' id='"+nextId+"-qtd'            type='number' name='nota_fiscal[nota_fiscal_item][][qtd]'            style='width: 70px;'                                         data-behavior='qtd'                                      ></td>" +
          "<td><input  class='form-control' id='"+nextId+"-preco_unitario' type='text' name='nota_fiscal[nota_fiscal_item][][preco_unitario]' style='width: 95px;'   readonly                              data-behavior='preco_unitario'                                                                                                                        ></td>" +
          "<td><input  class='form-control' id='"+nextId+"-preco_total'    type='text' name='nota_fiscal[nota_fiscal_item][][preco_total]'    style='width: 110px;'  readonly                              data-behavior='preco_total'                              ></td>" +
          "<td><button type='button' id='"+nextId+"-delete' data-behavior='delete' class='btn btn-danger delete'>x</button></td>" +
        "</tr>"
        )
      );
      
      let produtos = getProdutos()

      if(produtos){
        $(`#${nextId}-descricao`).append(`<option value=""></option>`);
        produtos.forEach(produto => {
          $(`#${nextId}-descricao`).append(`<option value="${produto.id}">${produto.descricao}</option>`);
        });
      }

      $("#"+nextId+"-cod_produto").parent().find(".tabledit-edit-button").trigger("click");

      $("#myModal").hide()
      calculoValorTotal()
    }, 100);
  }

  const atualizaProduto = () => {
    const number_tr = parseInt(event.target.id.match(/\d+/)[0])
    const produto_id = $(`#${number_tr}-descricao`).val()
    
    if(produto_id){
      $(`#${number_tr}-cod_produto`).val(`${produto_id}`)

      produto = getProduto(produto_id)
      
      if(produto){
        $(`#${number_tr}-ncm`).val(produto.ncm);
        $(`#${number_tr}-un`).val(produto.unidade);
        $(`#${number_tr}-qtd`).val("");
        $(`#${number_tr}-preco_unitario`).val("R$ "+produto.preco_custo + ".00");
        $(`#${number_tr}-preco_total`).val("");

        calculoValorTotal()
      }
    }
  }

  const calculoValorTotal = () => {
    let valorTotal = 0
    $("input[data-behavior~=preco_total]").each(function(){
      try {
        var input = $(this);
        var valor = input.val().replace(/,/g, ".").replace('R$', '')
        if(valor) valorTotal += parseFloat(valor)
      }catch(error){}
    });
  
    if(isInt(valorTotal)){
      $(`.valor-total`).html(`R$ ${valorTotal}.00`);
    }else{
      $(`.valor-total`).html(`R$ ${valorTotal}0`);
    }
      
    $("#loader").hide()
    $(".table-nota").show()
  }

  const isInt = (n) => {
    return Number(n) === n && n % 1 === 0;
  }

  // =============== Atualizar Estuque ===============
  var modal = document.getElementById("myModal");
  var span = document.getElementsByClassName("close")[0];

  span.onclick = function() {
    $("#myModal").hide()
  }

  $(document).on('blur', '[data-behavior~=qtd]', function(event) {
    const number_tr = parseInt(event.target.id.match(/\d+/)[0])
    const produto_id = $(`#${number_tr}-cod_produto`).val()

    abrirEstoques(produto_id, number_tr)
  });

  $(document).on('keyup', '[data-behavior~=qtd_venda]', function(event) {
    const estoque_id = parseInt(event.target.id.match(/\d+/)[0])
    const total_estoque = parseInt($(`#${estoque_id}-estoque`).html())
    const qtd_venda = parseFloat($(`#${estoque_id}-qtd_venda`).val())
    const total = total_estoque - qtd_venda

    if(total > 0 || total == 0){
      $(`#${estoque_id}-total`).html(`${total}`)
    }else{
      $(`#${estoque_id}-qtd_venda`).val(``)
      $(`#${estoque_id}-total`).html(`${total_estoque}`)
    }
  });

  const abrirEstoques = (produto_id, number_tr) => {
    $('#tableBody_estoque').html("")
    localStorage.setItem("produto_id", JSON.stringify(produto_id));

    let produto = getProduto(produto_id)
    let estoques = getEstoques(produto_id)
    let qtdProd = $(`#${number_tr}-qtd`).val()

    $(".descricaoProd").html(`${produto.descricao.trim()}`)
    $(".qtdProd").html(`${qtdProd}`)
  
    if(estoques){
      let table = $('.jsDinamicTable_estoque');
      let body = $('#tableBody_estoque');
      let produtoEmEstoque = false
      body.html("")

      estoques.forEach(estoque => {
        if(estoque.estoque_atual_lote > 0){
          var date = new Date(estoque.created_at);

          table.append(
            $(
            "<tr id='"+ estoque.id +"' class='operacao-estoque' >"+ 
              "<td>"+ estoque.lote +"</td>" +
              "<td>"+ `${date.getMonth() + 1}/${date.getFullYear()}` +"</td>" +
              "<td id='"+ estoque.id + "-estoque'>"+ estoque.estoque_atual_lote +"</td>" +
              "<td><input  class='form-control' id='"+ estoque.id +"-qtd_venda' type='text' style='width: 115px;' data-behavior='qtd_venda'></td>" +
              "<td id='"+ estoque.id + "-total'>"+ estoque.estoque_atual_lote +"</td>" +
            "</tr>"
            )
          );

          produtoEmEstoque = true
        }
      });

      movimentoEstoque = getMovimentoEstoque()
      if(movimentoEstoque){
        for (let index = 0; index < movimentoEstoque.length; index++) {
          const movimento = movimentoEstoque[index];
          if(movimento.produto_id == produto_id){
            $(`#${movimento.estoque_id}-estoque`).html(movimento.estoque_inicial)
            $(`#${movimento.estoque_id}-qtd_venda`).val(movimento.qtd)

            let total = movimento.estoque_inicial - movimento.qtd

            $(`#${movimento.estoque_id}-total`).html(total)
          }
        }
      }

      if (produtoEmEstoque) {
        $("#myModal").show()
      }else{
        alert(`O produto ${produto.descricao.trim()} não possui em estoque!`)
        const $tr = $($(`#${number_tr}-cod_produto`)).closest('tr');
        $tr.remove();

        addProduto()
      }
    }
  }

  const salvarMovimentoEstoque = () => {
    let movimentoEstoques = getMovimentoEstoque()

    if(!qtdSelecionadaIgualBaixa()){
      alert("Quantidade distribuida é diferente do adicionado")
      return
    }

    $('#tableBody_estoque tr').each(function() {
      var qtd = parseFloat($(`#${this.id}-qtd_venda`).val())

      for (let index = 0; index < movimentoEstoques.length; index++) {
        const movimento = movimentoEstoques[index];
        if(movimento.estoque_id == this.id){
          movimentoEstoques.splice(index, 1)
        }
      }

      if(qtd > 0){
        movimentoEstoque = {
          produto_id: JSON.parse(localStorage.getItem("produto_id")),
          estoque_id: this.id,
          origem: "<%= Estoque::VENDA %>",
          data: new Date,
          qtd: $(`#${this.id}-qtd_venda`).val(),
          estoque_inicial: $(`#${this.id}-estoque`).html(),
          estoque_final: parseFloat($(`#${this.id}-estoque`).html()) - parseFloat($(`#${this.id}-qtd_venda`).val()),
          nota_fiscal_id: "<%= @nota_fiscal.id %>"
        }

        movimentoEstoques.push(movimentoEstoque)
      }
    })

    setMovimentoEstoque(movimentoEstoques)

    let codProdutos = $('[data-behavior~=cod_produto]')
    let qtdProdutos = codProdutos.length
    let trPorduto = codProdutos[qtdProdutos - 1]
    let cod_produto_next = $(`#${trPorduto.id}`).val()

    if(cod_produto_next){
       addProduto()
    }else{
      $("#myModal").hide()
    }
  }

  const qtdSelecionadaIgualBaixa = () => {
    const qtdSelecinado = $(".qtdProd").html()
    let qtdAdd = 0

    $('#tableBody_estoque tr').each(function() {
      var qtd = $(`#${this.id}-qtd_venda`).val()
      if(qtd) qtdAdd += parseFloat(qtd) 
    })

    if(qtdSelecinado == qtdAdd) return true
    if(qtdSelecinado != qtdAdd) return false
  }

  
  // =============== Busca de Dados ===============
  const getProdutos = () => {
    let produtos = null
    
    $.ajax({
      type: "GET",
      url: `/produtos.json`,
      async: false,
      success: function(produtosRetornados){
        produtos = produtosRetornados
      }
    })

    return produtos
  }

  const getProduto = (produto_id) =>{
    let produto = null
    $.ajax({
      type: "GET",
      url: `/produtos/${produto_id}.json`,
      async: false,
      success: function(produtoRetornado){
        produto = produtoRetornado
      }
    })

    return produto
  }

  const getEstoques = (produto_id) => {
    let estoques = null
    if(produto_id){
      $.ajax({
        type: "GET",
        url: `/estoques.json`,
        async: false,
        data: { produto_id: produto_id },
        success: function(estoquesRetornado){
          estoques = estoquesRetornado
        }
      })
    }
    
    return estoques
  }

  const getMovimentos = () =>{
    let movimentoEstoques = getMovimentoEstoque()

    $.ajax({
      type: "GET",
      url: `/movimento_estoques.json`,
      data: {nota_fiscal_id: <%= @nota_fiscal.id %>},
      async: false,
      success: function(movimento_estoques){
        let addMovimentoLocal = []

        movimento_estoques.forEach(movimentoBD => {
          let dentrolocal = false

          movimentoEstoques.forEach(movimentoLocal => {
            if(movimentoBD.nota_fiscal_id == movimentoLocal.nota_fiscal_id){
              if(movimentoBD.produto_id == movimentoLocal.produto_id){
                if(movimentoBD.estoque_id == movimentoLocal.estoque_id){
                  dentrolocal = true
                }
              }
            }
          });

          if(!dentrolocal) addMovimentoLocal.push(movimentoBD)
        });

        let movimentos = movimentoEstoques.concat(addMovimentoLocal)
        setMovimentoEstoque(movimentos)
      }
    })
  }
</script>